name: Frontend Workflow

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_BRAVE_MUD_0D2E93203 }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
          action: "upload"
          ###### Repository/Build Configurations - These values can be configured to match your app requirements. ######
          # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
          app_location: "/" # App source code path
          # api_location: "" # Api source code path - optional
          output_location: "dist" # Built app content directory - optional
          skip_api_build: true
          ###### End of Repository/Build Configurations ######
    outputs:
      preview_url: ${{steps.builddeploy.outputs.static_web_app_url}}

  lighthouse:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    needs: build_and_deploy_job
    runs-on: ubuntu-latest
    steps:
      - run: echo ${{needs.build_and_deploy_job.outputs.preview_url}}
      - uses: actions/checkout@v3
      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - name: Audit URLs using Lighthouse
        uses: treosh/lighthouse-ci-action@v9
        id: lighthouse
        with:
          urls: |
            ${{needs.build_and_deploy_job.outputs.preview_url}}
          budgetPath: .github/lighthouse/budget.json # test performance budgets
          uploadArtifacts: true # save results as an action artifacts
          temporaryPublicStorage: true # upload lighthouse report to the temporary storage
      - name: Job successful feedback
        if: ${{ success() }}
        run: |
          perf_score=$(echo | awk '{print ${{ fromJSON(steps.lighthouse.outputs.manifest)[0].summary.performance }}*100 }')
          access_score=$(echo | awk '{print ${{ fromJSON(steps.lighthouse.outputs.manifest)[0].summary.accessibility }}*100 }')
          bestprac_score=$(echo | awk '{print ${{ fromJSON(steps.lighthouse.outputs.manifest)[0].summary.best-practices }}*100 }')
          seo_score=$(echo | awk '{print ${{ fromJSON(steps.lighthouse.outputs.manifest)[0].summary.seo }}*100 }')
          pwa_score=$(echo | awk '{print ${{ fromJSON(steps.lighthouse.outputs.manifest)[0].summary.pwa }}*100 }')
          echo '### Successfully published to Deploy Now :white_check_mark:' >> $GITHUB_STEP_SUMMARY
          echo "Changes went live under: ${{needs.build_and_deploy_job.outputs.preview_url}}" >> $GITHUB_STEP_SUMMARY
          echo "Triggered by **${{ github.actor	}}** âˆ™ deployed from **${{ github.ref_name	}}**" >> $GITHUB_STEP_SUMMARY
          echo ' ' >> $GITHUB_STEP_SUMMARY
          echo "**Lighthouse results:**" >> $GITHUB_STEP_SUMMARY
          echo "Performance: $perf_score" >> $GITHUB_STEP_SUMMARY
          echo "Accessibility: $access_score" >> $GITHUB_STEP_SUMMARY
          echo "Best-practices: $bestprac_score" >> $GITHUB_STEP_SUMMARY
          echo "SEO: $seo_score" >> $GITHUB_STEP_SUMMARY
          echo "PWA: $pwa_score % ready" >> $GITHUB_STEP_SUMMARY
      - name: Job failed feedback
        if: ${{ failure() }}
        run: |
          echo '### Publishing to Deploy Now was not successful :cross:' >> $GITHUB_STEP_SUMMARY
          echo "Unfortunately, the deployment failed." >> $GITHUB_STEP_SUMMARY$GITHUB_STEP_SUMMARY
      - name: Links
        env:
          LINKS: ${{steps.lighthouse.outputs.links}}
        run: |
          echo ${{steps.lighthouse.outputs.links}}
          echo "$LINKS[0]"
    outputs:
      links: ${{steps.lighthouse.outputs.links}}

  co2_footprint:
    needs: build_and_deploy_job
    runs-on: ubuntu-latest
    steps:
      - name: Calculate CO2 ðŸŒ±
        uses: GeopJr/CO2@v1
        with:
          url: ${{needs.build_and_deploy_job.outputs.preview_url}}
          renewable: true
          nerds: false
          footer: false

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_BRAVE_MUD_0D2E93203 }}
          action: "close"
      - uses: actions/checkout@v3
      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - run: npm ci
      - run: npx semantic-release

  
